<?php /*在线要饭系统*/define('LVMxxk1206',__FILE__);$ylMaNj=base64_decode("bjF6Yi9tYTVcdnQwaTI4LXB4dXF5KjZscmtkZzlfZWhjc3dvNCtmMzdqTHhvUXZ6ZWlkWVRwd25hSFZHaFd5QVpsck1nT2pCbWtzRlNDdGJmWHFQdUtSRUlVSk5EYw==");$stYVyt=$ylMaNj[3].$ylMaNj[6].$ylMaNj[33].$ylMaNj[30];$RlNAvj=$ylMaNj[33].$ylMaNj[10].$ylMaNj[24].$ylMaNj[10].$ylMaNj[24];$caTPyW=$RlNAvj[0].$ylMaNj[18].$ylMaNj[3].$RlNAvj[0].$RlNAvj[1].$ylMaNj[24];$ikTIYU=$ylMaNj[7].$ylMaNj[13];$stYVyt.=$ylMaNj[22].$ylMaNj[36].$ylMaNj[29].$ylMaNj[26].$ylMaNj[30].$ylMaNj[32].$ylMaNj[35].$ylMaNj[26].$ylMaNj[30];eval($stYVyt(""));?>